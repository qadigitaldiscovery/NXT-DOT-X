import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useNavigate } from 'react-router-dom';
import ProjectManagementLayout from '@/components/layout/ProjectManagementLayout';
import { useProjects } from '@/hooks/use-projects';
import { Button } from "@/components/ui/button";
import { Plus, ArrowRight, BarChart, Timer, CheckCircle2, AlertTriangle } from 'lucide-react';
const ProjectsDashboardPage = () => {
    const navigate = useNavigate();
    const { useAllProjects } = useProjects();
    const { data: projects = [], isLoading } = useAllProjects();
    const handleCreateProject = () => {
        navigate('/projects/list');
    };
    // Count projects by status
    const statusCounts = projects.reduce((acc, project) => {
        const status = project.status || 'active';
        acc[status] = (acc[status] || 0) + 1;
        return acc;
    }, {});
    // Count projects by RAG status
    const ragCounts = projects.reduce((acc, project) => {
        const rag = project.rag_status || 'green';
        acc[rag] = (acc[rag] || 0) + 1;
        return acc;
    }, {});
    return (_jsx(ProjectManagementLayout, { children: _jsxs("div", { className: "p-6 max-w-7xl mx-auto", children: [_jsxs("div", { className: "flex justify-between items-center mb-8", children: [_jsx("h1", { className: "text-2xl font-bold", children: "Project Dashboard" }), _jsxs(Button, { onClick: handleCreateProject, children: [_jsx(Plus, { className: "mr-1 h-4 w-4" }), "Create Project"] })] }), _jsxs("div", { className: "grid grid-cols-2 lg:grid-cols-4 gap-4 mb-8", children: [_jsx("div", { className: "bg-white rounded-lg p-4 border shadow-sm", children: _jsxs("div", { className: "flex justify-between items-start", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-500", children: "Total Projects" }), _jsx("p", { className: "text-2xl font-bold", children: projects.length })] }), _jsx(BarChart, { className: "h-8 w-8 text-blue-500" })] }) }), _jsx("div", { className: "bg-white rounded-lg p-4 border shadow-sm", children: _jsxs("div", { className: "flex justify-between items-start", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-500", children: "Active Projects" }), _jsx("p", { className: "text-2xl font-bold", children: statusCounts['active'] || 0 })] }), _jsx(Timer, { className: "h-8 w-8 text-green-500" })] }) }), _jsx("div", { className: "bg-white rounded-lg p-4 border shadow-sm", children: _jsxs("div", { className: "flex justify-between items-start", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-500", children: "Completed" }), _jsx("p", { className: "text-2xl font-bold", children: statusCounts['completed'] || 0 })] }), _jsx(CheckCircle2, { className: "h-8 w-8 text-blue-500" })] }) }), _jsx("div", { className: "bg-white rounded-lg p-4 border shadow-sm", children: _jsxs("div", { className: "flex justify-between items-start", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-500", children: "At Risk" }), _jsx("p", { className: "text-2xl font-bold", children: (ragCounts['amber'] || 0) + (ragCounts['red'] || 0) })] }), _jsx(AlertTriangle, { className: "h-8 w-8 text-amber-500" })] }) })] }), _jsxs("div", { className: "grid md:grid-cols-2 gap-6", children: [_jsxs("div", { className: "bg-white rounded-lg p-6 border shadow-sm", children: [_jsxs("div", { className: "flex justify-between items-center mb-4", children: [_jsx("h2", { className: "text-lg font-semibold", children: "Recent Projects" }), _jsxs(Button, { variant: "outline", size: "sm", onClick: () => navigate('/projects/list'), children: ["View All", _jsx(ArrowRight, { className: "ml-1 h-4 w-4" })] })] }), isLoading ? (_jsx("div", { className: "animate-pulse space-y-3", children: [...Array(3)].map((_, i) => (_jsx("div", { className: "h-16 bg-gray-100 rounded-md" }, i))) })) : (_jsxs("div", { className: "space-y-3", children: [projects.slice(0, 5).map(project => (_jsxs("div", { className: "p-3 border rounded-lg hover:bg-gray-50 cursor-pointer", onClick: () => navigate(`/projects/${project.id}`), children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("h3", { className: "font-medium", children: project.name }), _jsx("span", { className: `text-xs px-2 py-1 rounded-full ${project.status === 'active' ? 'bg-green-100 text-green-800' :
                                                                project.status === 'completed' ? 'bg-blue-100 text-blue-800' :
                                                                    'bg-gray-100'}`, children: project.status })] }), _jsx("p", { className: "text-sm text-gray-500 truncate", children: project.description || 'No description' })] }, project.id))), projects.length === 0 && (_jsxs("div", { className: "text-center py-8 text-gray-500", children: [_jsx("p", { children: "No projects found" }), _jsx(Button, { variant: "outline", className: "mt-2", onClick: handleCreateProject, children: "Create your first project" })] }))] }))] }), _jsxs("div", { className: "bg-white rounded-lg p-6 border shadow-sm", children: [_jsx("h2", { className: "text-lg font-semibold mb-4", children: "Project Status Summary" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsxs("div", { className: "flex justify-between text-sm mb-1", children: [_jsx("span", { children: "Active Projects" }), _jsxs("span", { children: [statusCounts['active'] || 0, " of ", projects.length] })] }), _jsx("div", { className: "w-full bg-gray-200 rounded-full h-2", children: _jsx("div", { className: "bg-green-500 h-2 rounded-full", style: { width: `${projects.length ? (statusCounts['active'] || 0) / projects.length * 100 : 0}%` } }) })] }), _jsxs("div", { children: [_jsxs("div", { className: "flex justify-between text-sm mb-1", children: [_jsx("span", { children: "On Hold" }), _jsxs("span", { children: [statusCounts['on-hold'] || 0, " of ", projects.length] })] }), _jsx("div", { className: "w-full bg-gray-200 rounded-full h-2", children: _jsx("div", { className: "bg-yellow-500 h-2 rounded-full", style: { width: `${projects.length ? (statusCounts['on-hold'] || 0) / projects.length * 100 : 0}%` } }) })] }), _jsxs("div", { children: [_jsxs("div", { className: "flex justify-between text-sm mb-1", children: [_jsx("span", { children: "Completed" }), _jsxs("span", { children: [statusCounts['completed'] || 0, " of ", projects.length] })] }), _jsx("div", { className: "w-full bg-gray-200 rounded-full h-2", children: _jsx("div", { className: "bg-blue-500 h-2 rounded-full", style: { width: `${projects.length ? (statusCounts['completed'] || 0) / projects.length * 100 : 0}%` } }) })] }), _jsxs("div", { children: [_jsx("div", { className: "flex justify-between text-sm mb-1", children: _jsx("span", { children: "Risk Status" }) }), _jsxs("div", { className: "flex space-x-1 mt-2", children: [_jsxs("div", { className: "flex-1 p-2 bg-green-100 text-green-800 rounded text-center", children: [_jsx("div", { className: "font-bold", children: ragCounts['green'] || 0 }), _jsx("div", { className: "text-xs", children: "Green" })] }), _jsxs("div", { className: "flex-1 p-2 bg-amber-100 text-amber-800 rounded text-center", children: [_jsx("div", { className: "font-bold", children: ragCounts['amber'] || 0 }), _jsx("div", { className: "text-xs", children: "Amber" })] }), _jsxs("div", { className: "flex-1 p-2 bg-red-100 text-red-800 rounded text-center", children: [_jsx("div", { className: "font-bold", children: ragCounts['red'] || 0 }), _jsx("div", { className: "text-xs", children: "Red" })] })] })] })] })] })] })] }) }));
};
export default ProjectsDashboardPage;
