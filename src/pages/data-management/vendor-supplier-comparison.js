import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { useNavigate } from 'react-router-dom';
import { VendorsList } from '@/components/vendorDetail/VendorsList';
import { SuppliersTable } from '@/components/suppliers/SuppliersTable';
import { useVendors } from '@/hooks/useVendorDetail';
import { useSuppliers } from '@/hooks/use-suppliers';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow, } from '@/components/ui/table';
export default function VendorSupplierComparison() {
    const navigate = useNavigate();
    const { data: vendors = [], isLoading: vendorsLoading } = useVendors();
    const { data: suppliers = [], isLoading: suppliersLoading } = useSuppliers();
    return (_jsxs("div", { className: "container mx-auto py-6 space-y-8", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("div", { children: [_jsx("h1", { className: "text-3xl font-bold", children: "Vendor & Supplier Comparison" }), _jsx("p", { className: "text-gray-500", children: "Compare vendor and supplier functionality to decide on integration strategy" })] }), _jsx(Button, { onClick: () => navigate('/data-management'), children: "Back to Dashboard" })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Feature Comparison" }), _jsx(CardDescription, { children: "Compare features between vendors and suppliers" })] }), _jsxs(CardContent, { children: [_jsxs(Table, { children: [_jsx(TableHeader, { children: _jsxs(TableRow, { children: [_jsx(TableHead, { className: "w-1/3", children: "Feature" }), _jsx(TableHead, { className: "w-1/3", children: "Vendors" }), _jsx(TableHead, { className: "w-1/3", children: "Suppliers" })] }) }), _jsxs(TableBody, { children: [_jsxs(TableRow, { children: [_jsx(TableCell, { className: "font-medium", children: "Credit Scoring" }), _jsx(TableCell, { className: "text-green-600", children: "\u2713 (Advanced)" }), _jsx(TableCell, { className: "text-red-600", children: "\u2717 (Not available)" })] }), _jsxs(TableRow, { children: [_jsx(TableCell, { className: "font-medium", children: "Cost Data" }), _jsx(TableCell, { className: "text-yellow-600", children: "\u2713 (Basic)" }), _jsx(TableCell, { className: "text-green-600", children: "\u2713 (Advanced)" })] }), _jsxs(TableRow, { children: [_jsx(TableCell, { className: "font-medium", children: "Performance Tracking" }), _jsx(TableCell, { className: "text-green-600", children: "\u2713 (Available)" }), _jsx(TableCell, { className: "text-red-600", children: "\u2717 (Not available)" })] }), _jsxs(TableRow, { children: [_jsx(TableCell, { className: "font-medium", children: "Report Generation" }), _jsx(TableCell, { className: "text-green-600", children: "\u2713 (Available)" }), _jsx(TableCell, { className: "text-red-600", children: "\u2717 (Not available)" })] }), _jsxs(TableRow, { children: [_jsx(TableCell, { className: "font-medium", children: "Contact Management" }), _jsx(TableCell, { className: "text-green-600", children: "\u2713 (Available)" }), _jsx(TableCell, { className: "text-yellow-600", children: "\u2713 (Basic)" })] }), _jsxs(TableRow, { children: [_jsx(TableCell, { className: "font-medium", children: "File Upload" }), _jsx(TableCell, { className: "text-red-600", children: "\u2717 (Not available)" }), _jsx(TableCell, { className: "text-green-600", children: "\u2713 (Advanced)" })] })] })] }), _jsxs("div", { className: "mt-6 p-4 bg-blue-50 border border-blue-200 rounded-md", children: [_jsx("h3", { className: "text-lg font-semibold text-blue-800 mb-2", children: "Recommendation:" }), _jsx("p", { children: "Consider merging vendor and supplier functionality into a unified \"Partners\" module with the following integration strategy:" }), _jsxs("ul", { className: "list-disc list-inside mt-2 ml-2 space-y-1 text-blue-700", children: [_jsx("li", { children: "Keep supplier cost data management and file upload workflows" }), _jsx("li", { children: "Integrate vendor credit scoring and performance tracking" }), _jsx("li", { children: "Combine contact management into a single interface" }), _jsx("li", { children: "Migrate to a single data model that supports both feature sets" })] })] })] })] }), _jsxs(Tabs, { defaultValue: "side-by-side", children: [_jsxs(TabsList, { className: "grid w-full grid-cols-3", children: [_jsx(TabsTrigger, { value: "side-by-side", children: "Side-by-Side View" }), _jsx(TabsTrigger, { value: "vendors", children: "Vendors View" }), _jsx(TabsTrigger, { value: "suppliers", children: "Suppliers View" })] }), _jsx(TabsContent, { value: "side-by-side", className: "mt-6", children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Vendors" }), _jsx(CardDescription, { children: "Healthcare suppliers with credit scoring" })] }), _jsx(CardContent, { children: vendorsLoading ? (_jsx("div", { className: "py-8 text-center", children: "Loading vendors..." })) : (_jsx("div", { className: "max-h-[400px] overflow-y-auto", children: _jsx(VendorsList, {}) })) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Suppliers" }), _jsx(CardDescription, { children: "Cost data suppliers" })] }), _jsx(CardContent, { children: suppliersLoading ? (_jsx("div", { className: "py-8 text-center", children: "Loading suppliers..." })) : (_jsx("div", { className: "max-h-[400px] overflow-y-auto", children: _jsx(SuppliersTable, {}) })) })] })] }) }), _jsx(TabsContent, { value: "vendors", className: "mt-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Vendors" }), _jsx(CardDescription, { children: "Healthcare suppliers with credit scoring" })] }), _jsx(CardContent, { children: _jsx(VendorsList, {}) })] }) }), _jsx(TabsContent, { value: "suppliers", className: "mt-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Suppliers" }), _jsx(CardDescription, { children: "Cost data suppliers" })] }), _jsx(CardContent, { children: _jsx(SuppliersTable, {}) })] }) })] })] }));
}
