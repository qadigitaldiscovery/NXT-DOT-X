import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useEffect } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { toast } from 'sonner';
import { Database, Server, HardDrive, Network, Zap } from 'lucide-react';
import { useModules } from '@/context/ModulesContext';
const DotXDataServices = () => {
    const { hasAccess } = useModules();
    useEffect(() => {
        // Check module access
        const hasModuleAccess = hasAccess('dot-x', 'data-services');
        if (!hasModuleAccess) {
            toast.error('Access denied', {
                description: 'You do not have access to the DOT-X Data Services module'
            });
        }
    }, [hasAccess]);
    const handleConnectService = (service) => {
        toast.success(`Connected to ${service}`, {
            description: `Successfully established connection to ${service} service`
        });
    };
    return (_jsxs("div", { className: "space-y-8", children: [_jsxs("div", { children: [_jsx("h1", { className: "text-3xl font-bold tracking-tight", children: "DOT-X Data Services" }), _jsx("p", { className: "text-muted-foreground", children: "Connect and manage DOT-X data pipelines and services" })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Database, { className: "h-5 w-5 text-blue-500" }), _jsx("span", { children: "Quantum Database" })] }), _jsx(CardDescription, { children: "High-performance distributed database system" })] }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Status:" }), _jsx("span", { className: "text-green-500 font-medium", children: "Online" })] }), _jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Nodes:" }), _jsx("span", { className: "font-medium", children: "12" })] }), _jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Storage:" }), _jsx("span", { className: "font-medium", children: "4.2 PB / 10 PB" })] }), _jsx(Button, { onClick: () => handleConnectService('Quantum Database'), className: "w-full mt-2", variant: "outline", children: "Connect" })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Server, { className: "h-5 w-5 text-purple-500" }), _jsx("span", { children: "Neural Processing" })] }), _jsx(CardDescription, { children: "Advanced neural network processing service" })] }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Status:" }), _jsx("span", { className: "text-green-500 font-medium", children: "Online" })] }), _jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Models:" }), _jsx("span", { className: "font-medium", children: "7" })] }), _jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Latency:" }), _jsx("span", { className: "font-medium", children: "12ms" })] }), _jsx(Button, { onClick: () => handleConnectService('Neural Processing'), className: "w-full mt-2", variant: "outline", children: "Connect" })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(HardDrive, { className: "h-5 w-5 text-green-500" }), _jsx("span", { children: "Data Vault" })] }), _jsx(CardDescription, { children: "Secure encrypted storage system" })] }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Status:" }), _jsx("span", { className: "text-green-500 font-medium", children: "Online" })] }), _jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Encryption:" }), _jsx("span", { className: "font-medium", children: "Level 10" })] }), _jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Backups:" }), _jsx("span", { className: "font-medium", children: "3 Active" })] }), _jsx(Button, { onClick: () => handleConnectService('Data Vault'), className: "w-full mt-2", variant: "outline", children: "Connect" })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Network, { className: "h-5 w-5 text-amber-500" }), _jsx("span", { children: "Mesh Network" })] }), _jsx(CardDescription, { children: "Resilient distributed communication network" })] }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Status:" }), _jsx("span", { className: "text-green-500 font-medium", children: "Online" })] }), _jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Nodes:" }), _jsx("span", { className: "font-medium", children: "248" })] }), _jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Throughput:" }), _jsx("span", { className: "font-medium", children: "1.2 TB/s" })] }), _jsx(Button, { onClick: () => handleConnectService('Mesh Network'), className: "w-full mt-2", variant: "outline", children: "Connect" })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Zap, { className: "h-5 w-5 text-indigo-500" }), _jsx("span", { children: "Quantum Compute" })] }), _jsx(CardDescription, { children: "Next-generation quantum computation service" })] }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Status:" }), _jsx("span", { className: "text-green-500 font-medium", children: "Online" })] }), _jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Qubits:" }), _jsx("span", { className: "font-medium", children: "128" })] }), _jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Jobs:" }), _jsx("span", { className: "font-medium", children: "3 Active" })] }), _jsx(Button, { onClick: () => handleConnectService('Quantum Compute'), className: "w-full mt-2", variant: "outline", children: "Connect" })] })] })] })] }));
};
export default DotXDataServices;
