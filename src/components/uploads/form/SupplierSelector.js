import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue, } from "@/components/ui/select";
export function SupplierSelector({ suppliers, selectedSupplier, onSupplierSelect, isUploading, useHoldingBucket, allowHoldingBucket = false, onHoldingBucketChange }) {
    return (_jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx(Label, { htmlFor: "supplier", children: "Select Supplier" }), allowHoldingBucket && (_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", id: "holding-bucket", className: "rounded border-gray-300 text-primary focus:ring-primary", checked: useHoldingBucket, onChange: () => onHoldingBucketChange(!useHoldingBucket), disabled: isUploading }), _jsx(Label, { htmlFor: "holding-bucket", className: "text-sm font-normal cursor-pointer flex items-center", children: "Upload to holding bucket for later allocation" })] }))] }), !useHoldingBucket && (_jsxs(Select, { value: selectedSupplier, onValueChange: onSupplierSelect, disabled: isUploading || useHoldingBucket, children: [_jsx(SelectTrigger, { id: "supplier", children: _jsx(SelectValue, { placeholder: "Select a supplier" }) }), _jsx(SelectContent, { children: suppliers.map((supplier) => (_jsx(SelectItem, { value: supplier.id, children: supplier.name }, supplier.id))) })] })), useHoldingBucket && (_jsx("div", { className: "p-3 bg-amber-50 border border-amber-200 rounded-md text-sm text-amber-800", children: "The file will be uploaded to a holding bucket and can be assigned to a supplier later." }))] }));
}
