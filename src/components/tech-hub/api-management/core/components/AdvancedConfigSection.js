import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Switch } from '@/components/ui/switch';
import { Slider } from '@/components/ui/slider';
const AdvancedConfigSection = ({ config, onUpdateConfig, showAdvancedOptions = true }) => {
    if (!showAdvancedOptions)
        return null;
    return (_jsxs("div", { className: "space-y-6", children: [_jsx("h3", { className: "text-lg font-medium", children: "Advanced Configuration" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx(Label, { htmlFor: "top_p", children: "Top P" }), _jsx("span", { className: "text-sm text-muted-foreground", children: config.top_p || 1 })] }), _jsx(Slider, { id: "top_p", defaultValue: [config.top_p || 1], min: 0, max: 1, step: 0.01, onValueChange: (values) => onUpdateConfig('top_p', values[0]) }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Controls diversity via nucleus sampling, setting a probability threshold for token selection." })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx(Label, { htmlFor: "frequency_penalty", children: "Frequency Penalty" }), _jsx("span", { className: "text-sm text-muted-foreground", children: config.frequency_penalty || 0 })] }), _jsx(Slider, { id: "frequency_penalty", defaultValue: [config.frequency_penalty || 0], min: -2, max: 2, step: 0.1, onValueChange: (values) => onUpdateConfig('frequency_penalty', values[0]) }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Reduces repetition by penalizing tokens that have already appeared in the text." })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx(Label, { htmlFor: "presence_penalty", children: "Presence Penalty" }), _jsx("span", { className: "text-sm text-muted-foreground", children: config.presence_penalty || 0 })] }), _jsx(Slider, { id: "presence_penalty", defaultValue: [config.presence_penalty || 0], min: -2, max: 2, step: 0.1, onValueChange: (values) => onUpdateConfig('presence_penalty', values[0]) }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Encourages discussion of new topics by penalizing tokens that have appeared in the text." })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-1", children: [_jsx(Label, { htmlFor: "streaming", children: "Streaming" }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Enable streaming responses" })] }), _jsx(Switch, { id: "streaming", checked: config.streaming !== false, onCheckedChange: (checked) => onUpdateConfig('streaming', checked) })] }), config.organization_id !== undefined && (_jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "organization_id", children: "Organization ID (Optional)" }), _jsx(Input, { id: "organization_id", type: "text", value: config.organization_id || '', onChange: (e) => onUpdateConfig('organization_id', e.target.value), placeholder: "org-..." }), _jsx("p", { className: "text-xs text-muted-foreground", children: "For users who belong to multiple organizations." })] }))] })] }));
};
export default AdvancedConfigSection;
